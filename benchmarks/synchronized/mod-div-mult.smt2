(declare-rel _mod (Int Int Int))
(declare-rel _div (Int Int Int))
(declare-rel mult (Int Int Int))
(declare-rel fail ())
(declare-var x Int)
(declare-var y Int)
(declare-var z Int)
(declare-var a Int)
(declare-var b Int)
(declare-var d Int)
(declare-var v Int)
(declare-var m Int)
(declare-var p Int)

(rule (=> (< x y) (_mod x y x)))
(rule (=> (and (>= x y) (_mod (- x y) y z)) (_mod x y z)))
(rule (=> (< x y) (_div x y 0)))
(rule (=> (and (>= x y) (_div (- x y) y z)) (_div x y (+ z 1))))
(rule (=> (= x 0) (mult x y 0)))
(rule (=> (and (not (= x 0)) (mult (- x 1) y z)) (mult x y (+ z y))))

(rule (=> (and (> x 0) (> a 0) (_div a x d) (_mod a x m) (mult d x b) (= a (+ b v)) (not (= v m))) fail))

(query fail :print-certificate true)
