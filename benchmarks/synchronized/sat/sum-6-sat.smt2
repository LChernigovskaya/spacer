(declare-rel f1 (Int Int))
(declare-rel fail ())
(declare-var y Int)
(declare-var n Int)
(declare-var x1 Int)
(declare-var x2 Int)
(declare-var x3 Int)
(declare-var x4 Int)
(declare-var x5 Int)
(declare-var x6 Int)
(declare-var x7 Int)
(declare-var m1 Int)
(declare-var m2 Int)
(declare-var m3 Int)
(declare-var m4 Int)
(declare-var m5 Int)
(declare-var m6 Int)
(declare-var m7 Int)

(rule (=> (<= n 0) (f1 n 0)))
(rule (=> (and (> n 0) (f1 (- n 1) y)) (f1 n (+ n y))))

(rule (=> (and (>= x2 x1) (>= x3 x1) (>= x4 x1) (>= x5 x1) (>= x6 x1) (>= x7 x1)
  (f1 x1 m1) (f1 x2 m2) (f1 x3 m3) (f1 x4 m4) (f1 x5 m5) (f1 x6 m6) (f1 x7 m7) (<= m1 (+ m2 m3 m4 m5 m6 m7))) fail))
(query fail :print-certificate true)

